import {defineType} from 'sanity'

export const article = defineType({
  name: 'article',
  title: 'üìÑ –°—Ç–∞—Ç—å—è',
  type: 'document',
  fields: [
    {
      name: 'title',
      title: '–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏',
      type: 'string',
      validation: Rule => Rule.required().error('–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'),
    },
    {
      name: 'slug',
      title: 'URL –∞–¥—Ä–µ—Å (slug)',
      type: 'slug',
      options: {
        source: 'title',
        maxLength: 96,
      },
      validation: Rule => Rule.required().error('URL –∞–¥—Ä–µ—Å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'),
    },
    {
      name: 'description',
      title: '–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ',
      type: 'text',
      rows: 3,
      validation: Rule => Rule.required().max(300).error('–û–ø–∏—Å–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ (–º–∞–∫—Å–∏–º—É–º 300 —Å–∏–º–≤–æ–ª–æ–≤)'),
    },
    {
      name: 'heroImage',
      title: '–ì–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
      type: 'image',
      options: {
        hotspot: true,
      },
      fields: [
        {
          name: 'alt',
          title: 'Alt —Ç–µ–∫—Å—Ç',
          type: 'string',
        },
      ],
      validation: Rule => Rule.required().error('–ì–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'),
    },
    {
      name: 'author',
      title: '–ê–≤—Ç–æ—Ä',
      type: 'string',
      initialValue: '–ù–∞—Ç–∞–ª–∏—è –†–æ—Ç–∞—Ä—å',
    },
    {
      name: 'publishedAt',
      title: '–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏',
      type: 'datetime',
      initialValue: () => new Date().toISOString(),
    },
    {
      name: 'readTime',
      title: '–í—Ä–µ–º—è —á—Ç–µ–Ω–∏—è',
      type: 'string',
      placeholder: '5 –º–∏–Ω',
    },
    {
      name: 'published',
      title: '‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ',
      type: 'boolean',
      description: '–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –Ω–∞ —Å–∞–π—Ç–µ',
      initialValue: false,
    },
    {
      name: 'content',
      title: '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏',
      type: 'blockContent',
      validation: Rule => Rule.required().error('–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'),
    },
    {
      name: 'featured',
      title: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —Å—Ç–∞—Ç—å—è',
      type: 'boolean',
      initialValue: false,
    },
    {
      name: 'tags',
      title: '–¢–µ–≥–∏',
      type: 'array',
      of: [{type: 'string'}],
      options: {
        layout: 'tags',
      },
    },
  ],
  preview: {
    select: {
      title: 'title',
      author: 'author',
      media: 'heroImage',
      publishedAt: 'publishedAt',
      published: 'published',
      slug: 'slug.current',
    },
    prepare({title, author, media, publishedAt, published, slug}: any) {
      const status = published ? '‚úÖ' : '‚ùå';
      const statusText = published ? '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ' : '–ß–µ—Ä–Ω–æ–≤–∏–∫';
      return {
        title: `${status} ${title}`,
        subtitle: `${statusText} ‚Ä¢ ${author} ‚Ä¢ ${new Date(publishedAt).toLocaleDateString('ru-RU')}`,
        media,
      }
    },
  },
  // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  liveEdit: true,
  orderings: [
    {
      title: 'Published Date, New',
      name: 'publishedAtDesc',
      by: [{field: 'publishedAt', direction: 'desc'}],
    },
    {
      title: 'Published Date, Old',
      name: 'publishedAtAsc',
      by: [{field: 'publishedAt', direction: 'asc'}],
    },
  ],
})